<Project>
  <Import Project="$(MSBuildThisFileDirectory)\SdkPackageVersions.props" />

  <PropertyGroup>
    <UsingscardotNETSdk>true</UsingscardotNETSdk>

    <!-- Determines if we should import Microsoft.NET.Sdk, if it wasn't already imported. -->
    <scardotSdkImportsMicrosoftNetSdk Condition=" '$(UsingMicrosoftNETSdk)' != 'true' ">true</scardotSdkImportsMicrosoftNetSdk>
  </PropertyGroup>

  <PropertyGroup>
    <Configurations>Debug;ExportDebug;ExportRelease</Configurations>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>

    <scardotProjectDir Condition=" '$(scardotProjectDir)' == '' ">$(MSBuildProjectDirectory)</scardotProjectDir>
    <scardotProjectDir>$([MSBuild]::EnsureTrailingSlash('$(scardotProjectDir)'))</scardotProjectDir>
    <scardotProjectDirBase64 Condition=" $([MSBuild]::VersionGreaterThanOrEquals($(MSBuildAssemblyVersion), '17.3')) ">$([MSBuild]::ConvertToBase64('$(scardotProjectDir)'))</scardotProjectDirBase64>

    <!-- Custom output paths for scardot projects. In brief, 'bin\' and 'obj\' are moved to '$(scardotProjectDir)\.godot\mono\temp\'. -->
    <BaseOutputPath>$(scardotProjectDir).godot\mono\temp\bin\</BaseOutputPath>
    <OutputPath>$(scardotProjectDir).godot\mono\temp\bin\$(Configuration)\</OutputPath>
    <!--
    Use custom IntermediateOutputPath and BaseIntermediateOutputPath only if it wasn't already set.
    Otherwise the old values may have already been changed by MSBuild which can cause problems with NuGet.
    -->
    <IntermediateOutputPath Condition=" '$(IntermediateOutputPath)' == '' ">$(scardotProjectDir).godot\mono\temp\obj\$(Configuration)\</IntermediateOutputPath>
    <BaseIntermediateOutputPath Condition=" '$(BaseIntermediateOutputPath)' == '' ">$(scardotProjectDir).godot\mono\temp\obj\</BaseIntermediateOutputPath>

    <!-- Do not append the target framework name to the output path. -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <Target Condition=" $([MSBuild]::VersionLessThan($(MSBuildAssemblyVersion), '17.3')) " Name="scardotProjectDir" BeforeTargets="Build">
    <Error Text="Cannot build from path containing '%23', move your project or update dotnet to the latest version." Condition="$(scardotProjectDir.Contains('%23'))" /> <!-- # -->
    <Error Text="Cannot build from path containing '%3B', move your project or update dotnet to the latest version." Condition="$(scardotProjectDir.Contains('%3B'))" /> <!-- ; -->
    <Error Text="Cannot build from path containing newlines, move your project or update dotnet to the latest version." Condition="$(scardotProjectDir.Contains('%0A'))" /> <!-- \n -->
    <Error Text="Cannot build from path containing newlines, move your project or update dotnet to the latest version." Condition="$(scardotProjectDir.Contains('%0D'))" /> <!-- \r -->
  </Target>

  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.props" Condition=" '$(scardotSdkImportsMicrosoftNetSdk)' == 'true' " />

  <PropertyGroup>
    <EnableDefaultNoneItems>false</EnableDefaultNoneItems>
  </PropertyGroup>

  <!--
  The Microsoft.NET.Sdk only understands of the Debug and Release configurations.
  We need to set the following properties manually for ExportDebug and ExportRelease.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' or '$(Configuration)' == 'ExportDebug' ">
    <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">true</DebugSymbols>
    <Optimize Condition=" '$(Optimize)' == '' ">false</Optimize>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'ExportRelease' ">
    <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
  </PropertyGroup>

  <PropertyGroup>
    <scardotApiConfiguration Condition=" '$(Configuration)' != 'ExportRelease' ">Debug</scardotApiConfiguration>
    <scardotApiConfiguration Condition=" '$(Configuration)' == 'ExportRelease' ">Release</scardotApiConfiguration>
  </PropertyGroup>

  <!-- Auto-detect the target scardot platform if it was not specified. -->
  <PropertyGroup Condition=" '$(scardotTargetPlatform)' == '' ">
    <scardotTargetPlatform Condition=" $(RuntimeIdentifier.StartsWith('ios')) ">ios</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('android')) ">android</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('browser')) ">web</scardotTargetPlatform>

    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('linux')) ">linuxbsd</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('freebsd')) ">linuxbsd</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('osx')) ">macos</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$(scardotTargetPlatform)' == '' and $(RuntimeIdentifier.StartsWith('win')) ">windows</scardotTargetPlatform>
  </PropertyGroup>

  <!-- Auto-detect the target scardot platform if it was not specified and there's no runtime identifier information. -->
  <PropertyGroup Condition=" '$(scardotTargetPlatform)' == '' ">
    <scardotTargetPlatform Condition=" '$([MSBuild]::IsOsPlatform(Linux))' ">linuxbsd</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$([MSBuild]::IsOsPlatform(FreeBSD))' ">linuxbsd</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$([MSBuild]::IsOsPlatform(OSX))' ">macos</scardotTargetPlatform>
    <scardotTargetPlatform Condition=" '$([MSBuild]::IsOsPlatform(Windows))' ">windows</scardotTargetPlatform>
  </PropertyGroup>

  <PropertyGroup>
    <scardotFloat64 Condition=" '$(scardotFloat64)' == '' ">false</scardotFloat64>
  </PropertyGroup>

  <!-- scardot DefineConstants. -->
  <PropertyGroup>
    <!-- Define constants to identify scardot builds. -->
    <scardotDefineConstants>SCARDOT</scardotDefineConstants>

    <!--
    Define constant to determine the target scardot platform. This includes the
    recognized platform names and the platform category (PC, MOBILE or WEB).
    -->
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'windows' ">SCARDOT_WINDOWS;SCARDOT_PC</scardotPlatformConstants>
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'linuxbsd' ">SCARDOT_LINUXBSD;SCARDOT_PC</scardotPlatformConstants>
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'macos' ">SCARDOT_OSX;SCARDOT_MACOS;SCARDOT_PC</scardotPlatformConstants>
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'android' ">SCARDOT_ANDROID;SCARDOT_MOBILE</scardotPlatformConstants>
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'ios' ">SCARDOT_IPHONE;SCARDOT_IOS;SCARDOT_MOBILE</scardotPlatformConstants>
    <scardotPlatformConstants Condition=" '$(scardotTargetPlatform)' == 'web' ">SCARDOT_JAVASCRIPT;SCARDOT_HTML5;SCARDOT_WASM;SCARDOT_WEB</scardotPlatformConstants>

    <scardotDefineConstants>$(scardotDefineConstants);$(scardotPlatformConstants);$(scardotVersionConstants)</scardotDefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <!-- ExportDebug also defines DEBUG like Debug does. -->
    <DefineConstants Condition=" '$(Configuration)' == 'ExportDebug' ">$(DefineConstants);DEBUG</DefineConstants>
    <!-- Debug defines TOOLS to differentiate between Debug and ExportDebug configurations. -->
    <DefineConstants Condition=" '$(Configuration)' == 'Debug' ">$(DefineConstants);TOOLS</DefineConstants>

    <DefineConstants>$(scardotDefineConstants);$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)\iOSNativeAOT.props" Condition=" '$(scardotTargetPlatform)' == 'ios' " />
</Project>
